#!/usr/bin/env node
/*
 * Copyright (c) 2012, Joyent, Inc. All rights reserved.
 *
 * CLI for working with the central Joyent SDC Updates Image API:
 *      https://updates.joyent.us
 *
 * Notes:
 * - This server will eventually be hosted at updates.joyent.com.
 * - This is *separate* from the "Joyent Images API": images.joyent.com.
 */

var format = require('util').format;
var mod_url = require('url');
var execFile = require('child_process').execFile;
var CLI = require('../lib/cli');


//---- globals

var NAME = 'updates-imgadm';
var URL = 'https://updates.joyent.us';
//var URL = 'https://10.2.172.99';
var DESCRIPTION = (
    'Manage images on the central Joyent SDC Updates repo (https://updates.joyent.us).\n'
    + '\n'
    + 'Authentication is required for any modifying endpoints (adding images,\n'
    + 'etc.). To get access, you must have your username and key added\n'
    + 'by the administrator. Then set the following in your\n'
    + 'environment (presuming "~/.ssh/id_rsa.pub" is the key you provided):\n'
    + '\n'
    + '    export UPDATES_IMGADM_USER=<given username>\n'
    + '    export UPDATES_IMGADM_IDENTITY=`ssh-keygen -l -f ~/.ssh/id_rsa.pub \\\n'
    + '        | awk \'{print $2}\' | tr -d \'\\n\'`\n'
    + '\n'
    + 'If setup correctly, `updates-imgadm ping` should work (prints "pong").\n'
    );


//---- support stuff

function logerror(err, verbose) {
    if (err.code) {
        console.error(format('%s: error (%s): %s', NAME, err.code,
            err.message));
    } else {
        console.error(format('%s: error: %s', NAME, err.message));
    }
    if (verbose && err.stack) {
        console.error('\n' + err.stack);
    }
}

/**
 * If this is running in the smartos GZ, then DNS isn't enabled. Manually
 * resolve the IP.
 */
function getUrl(callback) {
    if (process.platform !== 'sunos') {
        return callback(null, URL);
    }
    execFile('/usr/bin/zonename', [], function (zErr, zStdout, zStderr) {
        if (zErr) {
            return callback(new Error('failed to get zonename: ' + zStderr));
        }
        var zonename = zStdout.trim();
        if (zonename !== 'global') {
            return callback(null, URL);
        }

        var parsed = mod_url.parse(URL);
        execFile('/usr/sbin/dig', [parsed.host, '+short'],
            function (dErr, dStdout, dStderr) {
                if (dErr) {
                    return callback(new Error(format(
                        'failed to dig IP for %s: %s', parsed.host, dStderr)));
                }
                var ip = dStdout.trim().split(/\n/g)[0];
                var url = URL.replace('updates.joyent.us', ip);
                callback(null, url);
            }
        );
    });
}



//---- mainline

function main(argv) {
    getUrl(function (urlErr, url) {
        if (urlErr) {
            logerror(urlErr);
            process.exit(1);
        }
        var cli = new CLI({
            name: NAME,
            url: url,
            description: DESCRIPTION,
            auth: 'signature',
            envopts: [
                ['UPDATES_IMGADM_IDENTITY', 'identity'],
                ['UPDATES_IMGADM_USER', 'user'],
            ]
        });
        cli.main(argv, function (err, verbose) {
            if (err) {
                logerror(err, verbose);
                process.exit(err.exitStatus || 1);
            }
            process.exit(0);
        });
    });
}

if (require.main === module) {
    main(process.argv);
}
